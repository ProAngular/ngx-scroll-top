{
  "root": true,
  "ignorePatterns": [
    "projects/**/*"
  ],
  "overrides": [
    {
      "files": [
        "src/**/*.ts"
      ],
      "parserOptions": {
        "project": [
          "tsconfig.json",
          "e2e/tsconfig.json"
        ],
        "createDefaultProgram": true
      },
      "extends": [
        "eslint:recommended",
        "plugin:import/recommended",
        "plugin:import/typescript",
        "plugin:rxjs/recommended",
        "plugin:@typescript-eslint/recommended",
        "plugin:@angular-eslint/recommended",
        "plugin:@angular-eslint/recommended--extra",
        "plugin:@angular-eslint/ng-cli-compat",
        "plugin:@angular-eslint/ng-cli-compat--formatting-add-on",
        "plugin:@angular-eslint/template/process-inline-templates",
        "prettier"
      ],
      "plugins": [ "jsdoc", "rxjs-angular", "unicorn" ],
      "rules": {
        // Excluded rules
        "@typescript-eslint/no-empty-interface": "off",
        "import/no-deprecated": "off",
        "import/no-unresolved": "off",
        "rxjs/no-async-subscribe": "off",
        "rxjs/no-sharereplay": "off",
        // Included rules
        "@angular-eslint/component-selector": [
          "error",
          {
            "type": "element",
            "prefix": "pro",
            "style": "kebab-case"
          }
        ],
        "@angular-eslint/directive-selector": [
          "error",
          {
            "type": "attribute",
            "prefix": "pro",
            "style": "camelCase"
          }
        ],
        "@angular-eslint/no-host-metadata-property": [
          "error",
          { "allowStatic": true }
        ],
        "@angular-eslint/prefer-output-readonly": [ "error" ],
        "@angular-eslint/use-component-selector": [ "error" ],
        "@angular-eslint/use-component-view-encapsulation": [ "error" ],
        "@angular-eslint/use-lifecycle-interface": [ "error" ],
        "@typescript-eslint/array-type": [
          "error",
          {
            "default": "array-simple"
          }
        ],
        "@typescript-eslint/consistent-type-assertions": [
          "error",
          {
            "assertionStyle": "as",
            "objectLiteralTypeAssertions": "never"
          }
        ],
        "@typescript-eslint/consistent-type-definitions": [ "error" ],
        "@typescript-eslint/explicit-function-return-type": [
          "error",
          {
            // Only functions which are part of a declaration will be checked.
            "allowExpressions": true
          }
        ],
        "@typescript-eslint/explicit-member-accessibility": [
          "error",
          { "accessibility": "explicit" }
        ],
        "@typescript-eslint/explicit-module-boundary-types": [ "error" ],
        "@typescript-eslint/member-ordering": [
          "error",
          {
            "default": [
              "constructor",
              "static-field",
              "instance-field",
              "static-method",
              "instance-method"
            ]
          }
        ],
        "@typescript-eslint/naming-convention": [
          "error",
          {
            "selector": "classProperty",
            "format": [ "PascalCase", "camelCase" ],
            "modifiers": [ "public" ]
          },
          {
            "selector": "function",
            "format": [ "camelCase" ]
          },
          {
            "selector": "interface",
            "format": [ "PascalCase" ],
            "custom": {
              "regex": "^I[A-Z]",
              "match": false
            }
          }
        ],
        "@typescript-eslint/no-empty-function": "error",
        "@typescript-eslint/no-explicit-any": "error",
        "@typescript-eslint/no-namespace": [
          "error",
          { "allowDeclarations": true }
        ],
        "@typescript-eslint/no-unused-expressions": [ "error" ],
        "@typescript-eslint/no-unused-vars": [
          "error",
          {
            "argsIgnorePattern": "^_",
            "ignoreRestSiblings": true,
            "varsIgnorePattern": "^_"
          }
        ],
        "@typescript-eslint/prefer-for-of": [ "warn" ],
        "@typescript-eslint/prefer-function-type": [ "warn" ],
        "@typescript-eslint/prefer-readonly": "error",
        "@typescript-eslint/unified-signatures": [ "warn" ],
        "eqeqeq": [ "error" ],
        "guard-for-in": [ "error" ],
        "import/no-default-export": [ "error" ],
        "jsdoc/check-alignment": [ "error" ],
        "jsdoc/check-indentation": [ "error" ],
        "no-bitwise": [ "error" ],
        "no-caller": [ "error" ],
        "no-console": [ "error" ],
        "no-duplicate-imports": [ "error" ],
        "no-empty": "error",
        "no-eval": [ "error" ],
        "no-new-wrappers": [ "error" ],
        "no-throw-literal": [ "error" ],
        "no-var": [ "error" ],
        "object-shorthand": [ "error" ],
        "one-var": [ "error", "never" ],
        "prefer-arrow/prefer-arrow-functions": "off",
        "prefer-const": [ "error" ],
        "radix": [ "error" ],
        "rxjs-angular/prefer-takeuntil": [
          "error",
          { "alias": [ "untilDestroyed" ] }
        ],
        "rxjs/no-exposed-subjects": [ "error" ],
        "rxjs/no-finnish": [ "error" ],
        "rxjs/no-ignored-replay-buffer": [ "error" ],
        "rxjs/no-tap": [ "error" ],
        "rxjs/no-unsafe-takeuntil": [
          "error",
          { "alias": [ "untilDestroyed" ] }
        ],
        "spaced-comment": [
          "error",
          "always",
          { "block": { "balanced": true } }
        ],
        "unicorn/filename-case": [
          "error",
          { "case": "kebabCase" }
        ]
      }
    },
    {
      "files": [
        "src/**/*.html"
      ],
      "parser": "@angular-eslint/template-parser",
      "extends": [
        "plugin:@angular-eslint/template/recommended"
      ],
      "rules": {}
    }
  ]
}
